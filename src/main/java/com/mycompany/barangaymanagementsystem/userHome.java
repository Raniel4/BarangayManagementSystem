/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.barangaymanagementsystem;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author My Computer
 */
public class userHome extends javax.swing.JFrame {

    private static String loggedInUsername;
    private javax.swing.JLabel welcomeLabel;
    /**
     * Creates new form userHome
     */
    public userHome() {
        initComponents();
        updateTable();
    }
/**
     start welcome message
 */  
    public static void setLoggedInUsername(String username) {
        loggedInUsername = username;
    }
    
public void setWelcomeName(String username) {
    System.out.println("setWelcomeName called with username: " + username); 
    welcomeMessageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER); 
    welcomeMessageLabel.setText("<html><div style='text-align: center; line-height: 0.1;'>Welcome,<br>" + username + "</div></html>");
    home.repaint(); 
}
    
/**
     end welcome message
 */  

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        home = new javax.swing.JPanel();
        logoutButton = new javax.swing.JButton();
        welcomeMessageLabel = new javax.swing.JLabel();
        bookResButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        bookReservation = new javax.swing.JPanel();
        backButton1 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        bookName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        refNumber = new javax.swing.JTextField();
        timeComboBox = new javax.swing.JComboBox<>();
        datePicker = new javax.swing.JSpinner();
        bookReservationButton = new javax.swing.JButton();
        gcashPic = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        reservationPanel = new javax.swing.JPanel();
        backButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        officialReserveTable = new javax.swing.JTable();
        bookNow = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1210, 930));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        home.setLayout(null);

        logoutButton.setBorderPainted(false);
        logoutButton.setContentAreaFilled(false);
        logoutButton.setFocusPainted(false);
        logoutButton.setFocusable(false);
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });
        home.add(logoutButton);
        logoutButton.setBounds(1070, 98, 115, 36);

        welcomeMessageLabel.setFont(new java.awt.Font("Yu Mincho Demibold", 0, 18)); // NOI18N
        welcomeMessageLabel.setForeground(new java.awt.Color(255, 255, 255));
        home.add(welcomeMessageLabel);
        welcomeMessageLabel.setBounds(1050, 20, 150, 70);

        bookResButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buttons/bookResIdle.png"))); // NOI18N
        bookResButton.setBorderPainted(false);
        bookResButton.setContentAreaFilled(false);
        bookResButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bookResButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buttons/bookResPressed.png"))); // NOI18N
        bookResButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookResButtonActionPerformed(evt);
            }
        });
        home.add(bookResButton);
        bookResButton.setBounds(700, 555, 305, 255);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/userHome.png"))); // NOI18N
        home.add(jLabel1);
        jLabel1.setBounds(0, 0, 1200, 900);

        jTabbedPane1.addTab("tab1", home);

        bookReservation.setLayout(null);

        backButton1.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        backButton1.setForeground(new java.awt.Color(255, 255, 255));
        backButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buttons/shortButtonIdle.png"))); // NOI18N
        backButton1.setText("BACK");
        backButton1.setBorderPainted(false);
        backButton1.setContentAreaFilled(false);
        backButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButton1.setFocusPainted(false);
        backButton1.setFocusable(false);
        backButton1.setIconTextGap(-80);
        backButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        backButton1.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buttons/shortButtonPressed.png"))); // NOI18N
        backButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton1ActionPerformed(evt);
            }
        });
        bookReservation.add(backButton1);
        backButton1.setBounds(1080, 50, 100, 60);

        jLabel3.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Name:");
        bookReservation.add(jLabel3);
        jLabel3.setBounds(80, 230, 70, 30);

        bookName.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bookReservation.add(bookName);
        bookName.setBounds(80, 270, 400, 30);

        jLabel5.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Date:");
        bookReservation.add(jLabel5);
        jLabel5.setBounds(80, 330, 70, 30);

        jLabel4.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Time:");
        bookReservation.add(jLabel4);
        jLabel4.setBounds(80, 430, 70, 30);

        jLabel6.setFont(new java.awt.Font("Arial Black", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Payment Ref. No.");
        bookReservation.add(jLabel6);
        jLabel6.setBounds(80, 530, 210, 30);

        refNumber.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        bookReservation.add(refNumber);
        refNumber.setBounds(80, 580, 400, 30);

        timeComboBox.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        timeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Morning", "Afternoon", "Night" }));
        bookReservation.add(timeComboBox);
        timeComboBox.setBounds(80, 480, 150, 30);

        datePicker.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        datePicker.setModel(new javax.swing.SpinnerDateModel());
        datePicker.setEditor(new javax.swing.JSpinner.DateEditor(datePicker, "MM-dd-yyyy"));
        bookReservation.add(datePicker);
        datePicker.setBounds(80, 380, 133, 30);

        bookReservationButton.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        bookReservationButton.setForeground(new java.awt.Color(255, 255, 255));
        bookReservationButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buttons/longButtonIdle2.png"))); // NOI18N
        bookReservationButton.setText("CONFIRM BOOKING");
        bookReservationButton.setBorderPainted(false);
        bookReservationButton.setContentAreaFilled(false);
        bookReservationButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bookReservationButton.setIconTextGap(-225);
        bookReservationButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        bookReservationButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buttons/longButtonPressed2.png"))); // NOI18N
        bookReservationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookReservationButtonActionPerformed(evt);
            }
        });
        bookReservation.add(bookReservationButton);
        bookReservationButton.setBounds(140, 650, 250, 60);

        gcashPic.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gCashHenric.png"))); // NOI18N
        bookReservation.add(gcashPic);
        gcashPic.setBounds(650, 200, 350, 470);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/notice.png"))); // NOI18N
        bookReservation.add(jLabel7);
        jLabel7.setBounds(620, 700, 410, 150);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bookPanel.png"))); // NOI18N
        bookReservation.add(jLabel2);
        jLabel2.setBounds(0, 0, 1200, 900);

        jTabbedPane1.addTab("tab2", bookReservation);

        reservationPanel.setLayout(null);

        backButton2.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        backButton2.setForeground(new java.awt.Color(255, 255, 255));
        backButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buttons/shortButtonIdle.png"))); // NOI18N
        backButton2.setText("BACK");
        backButton2.setBorderPainted(false);
        backButton2.setContentAreaFilled(false);
        backButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backButton2.setFocusPainted(false);
        backButton2.setFocusable(false);
        backButton2.setIconTextGap(-80);
        backButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        backButton2.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buttons/shortButtonPressed.png"))); // NOI18N
        backButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButton2ActionPerformed(evt);
            }
        });
        reservationPanel.add(backButton2);
        backButton2.setBounds(1080, 50, 100, 60);

        officialReserveTable.setBackground(new java.awt.Color(40, 54, 24));
        officialReserveTable.setFont(new java.awt.Font("Arial Black", 0, 12)); // NOI18N
        officialReserveTable.setForeground(new java.awt.Color(255, 255, 255));
        officialReserveTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Date", "Time", "Reference No."
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        officialReserveTable.setRequestFocusEnabled(false);
        officialReserveTable.setRowSelectionAllowed(false);
        officialReserveTable.setSelectionForeground(new java.awt.Color(255, 255, 255));
        jScrollPane1.setViewportView(officialReserveTable);

        reservationPanel.add(jScrollPane1);
        jScrollPane1.setBounds(250, 240, 700, 460);

        bookNow.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        bookNow.setForeground(new java.awt.Color(255, 255, 255));
        bookNow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buttons/longButtonIdle2.png"))); // NOI18N
        bookNow.setText("BOOK NOW");
        bookNow.setBorderPainted(false);
        bookNow.setContentAreaFilled(false);
        bookNow.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bookNow.setIconTextGap(-180);
        bookNow.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/images/buttons/longButtonPressed2.png"))); // NOI18N
        bookNow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookNowActionPerformed(evt);
            }
        });
        reservationPanel.add(bookNow);
        bookNow.setBounds(480, 760, 250, 60);

        jLabel9.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("CURRENT SCHEDULE");
        reservationPanel.add(jLabel9);
        jLabel9.setBounds(455, 190, 300, 35);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/bookPanel.png"))); // NOI18N
        reservationPanel.add(jLabel8);
        jLabel8.setBounds(0, 0, 1200, 900);

        jTabbedPane1.addTab("tab3", reservationPanel);

        getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, -30, 1210, 930));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    private void handleReservationRequest() {
        String name = bookName.getText();
        Date selectedDate = (Date) datePicker.getValue();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String date = sdf.format((Date) datePicker.getValue());
        String timeSlot = (String) timeComboBox.getSelectedItem();
        String referenceNumber = refNumber.getText();

        if (isTimeSlotAvailable(date, timeSlot)) {
            saveReservation(name, date, timeSlot, referenceNumber);
            JOptionPane.showMessageDialog(null, "Reservation successfully requested!");
        } else {
            JOptionPane.showMessageDialog(null, "Sorry, this time slot is already reserved.");
        }
    }

    // Save Reservation to File
    private void saveReservation(String name, String date, String timeSlot, String referenceNumber) {
        try (BufferedWriter writer = new BufferedWriter(new FileWriter("reservationsRequests.txt", true))) {
            writer.write(name + "," + date + "," + timeSlot + "," + referenceNumber);
            writer.newLine();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }
    private boolean isTimeSlotAvailable(String date, String timeSlot) {
        try (BufferedReader reader = new BufferedReader(new FileReader("reservationsRequests.txt"))) {
            String line;
            while ((line = reader.readLine()) != null) {
                System.out.println(line);
                String[] parts = line.split(",");
                String existingDate = parts[1];
                System.out.println(existingDate);
                System.out.println(date);
                String existingTimeSlot = parts[2];
                System.out.println(existingTimeSlot);
                System.out.println(timeSlot);

                // Check for both date and time slot conflict
                if ((date.equals(existingDate)) && (timeSlot.equals(existingTimeSlot))) {
                    return false;  // Time slot is not available
                }
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        return true;  // Time slot is available
    }
    
    private List<String[]> readReservationsInReverseOrder(String filename) {
        List<String[]> rows = new ArrayList<>();

        try (BufferedReader reader = new BufferedReader(new FileReader(filename))) {
            String line;
            while ((line = reader.readLine()) != null) {
                String[] parts = line.split(",");
                rows.add(parts);
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
        Collections.reverse(rows);
        return rows;
    }
    
    private void updateTable() {        
        List<String[]> rows1 = readReservationsInReverseOrder("reservations.txt");
        for (String[] row : rows1) {
            ((javax.swing.table.DefaultTableModel) officialReserveTable.getModel()).addRow(row);
        }
    }
    
    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        new Login().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_logoutButtonActionPerformed

    private void backButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton1ActionPerformed
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_backButton1ActionPerformed

    private void bookResButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookResButtonActionPerformed
        jTabbedPane1.setSelectedIndex(2);
    }//GEN-LAST:event_bookResButtonActionPerformed

    private void bookReservationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookReservationButtonActionPerformed
        handleReservationRequest();
    }//GEN-LAST:event_bookReservationButtonActionPerformed

    private void backButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButton2ActionPerformed
        jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_backButton2ActionPerformed

    private void bookNowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookNowActionPerformed
        jTabbedPane1.setSelectedIndex(1);
    }//GEN-LAST:event_bookNowActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(userHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(userHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(userHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(userHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new userHome().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton1;
    private javax.swing.JButton backButton2;
    private javax.swing.JTextField bookName;
    private javax.swing.JButton bookNow;
    private javax.swing.JButton bookResButton;
    private javax.swing.JPanel bookReservation;
    private javax.swing.JButton bookReservationButton;
    private javax.swing.JSpinner datePicker;
    private javax.swing.JLabel gcashPic;
    private javax.swing.JPanel home;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton logoutButton;
    private javax.swing.JTable officialReserveTable;
    private javax.swing.JTextField refNumber;
    private javax.swing.JPanel reservationPanel;
    private javax.swing.JComboBox<String> timeComboBox;
    private javax.swing.JLabel welcomeMessageLabel;
    // End of variables declaration//GEN-END:variables
}
